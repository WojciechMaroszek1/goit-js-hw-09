{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,qBACpCE,EAAYH,SAASC,cAAc,oBACnCG,EAASJ,SAASC,cAAc,sBAItC,SAASI,EAAcC,EAAUC,GAY/B,OAXkB,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPR,EAAKe,iBAAiB,UAiBtB,SAAoBC,GAClBA,EAAMC,iBAMN,IAJA,IAAIC,EAAYC,OAAOhB,EAAWiB,OAC9BC,EAASF,OAAOd,EAAOe,OACvBE,EAAWH,OAAOf,EAAUgB,OAEvBG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCjB,EAAciB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,QAAQC,IAAIpB,GACZqB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBoB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDU,GAAaI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=delay]');\nconst delayStep = document.querySelector('input[name=step]');\nconst Amount = document.querySelector('input[name=amount]');\n\nform.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  const promiseMy = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promiseMy;\n}\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  let waitDelay = Number(firstDelay.value);\n  let amount = Number(Amount.value);\n  let waitStep = Number(delayStep.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, waitDelay)\n      .then(({ position, delay }) => {\n        console.log(position);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    waitDelay += waitStep;\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$Amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","waitDelay","Number","value","amount","waitStep","i","then","param","console","log","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.648095ee.js.map"}